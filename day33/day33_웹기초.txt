웹기초

GET과 POST는 면접에서 자주 나올만큼 중요한 개념이다.


크롬 기능으로, 개발자 네트워크 항목에 캐시 사용 중지, 오프라인 설정 등 유용한 기능이 많다.
페이로드를 보면, 입력된 데이터(POST 바디 등...)이 보인다.

referer : 페이지를 들어오기 직전의 주소가 보인다.
마케팅 쪽에서 자주 쓴다.

요청(Request) - 웹브라우저
	요청 전문
		헤더(Header)
			요청 쪽 정보(언어, IP, 국가, 브라우저 정보)
			요청 방식
			요청 URL
			요청 쿠키...
			
			 요청 방식이 POST ...
			-> 바디 데이터의 형식(content-type) (매우 중요하다.)
			-> application/x-www-form-urlencoded
			
		바디
		GET방식은
		주소 입력 = 검색을 겸한다.
		바디는 무조건 포스트 전용이다.
	
			POST일때(application/x-www-form-urlencoded)
			키=값&키=값
		


응답(Response) - 서버
	응답 전문
		헤더(Header)
			바디 데이터의 종류(content-type)
			예)text/html
			
			브라우저의 기능 통제
			1)Location: 주소 -> 주소 이동 명령
			2)Refresh: 초 -> 초 주기로 새로고침
			3)Cache-Control : ....
			4)Set-Cookie : 키=값; ... -> 브라우저에게 쿠키 등록 명령
			5)Content-disposition: attachment; filename=파일명 ->
				바디 데이터를 파일명으로 작성 -> 다운로드			
			
			응답 코드
				2xx :
					-200 : 정상처리 -> 요청 -> 서버 -> 응답
					-201 : 작성됨(POST ....)

				3xx :
					-301, 302
					-304 -캐시됨

				4xx : 사용자 쪽 오류
					-400 : bad request : 요청 파라미터가 잘못된 경우
					-401 : unauthorized : 접속 권한 없음
					-403 : forbidden
					-404 : Not Found : 페이지 주소 잘못됨
					-405 : Not Allowed Method, POST만 허용하고 있는 URL을 GET방식으로 접근할때

				5xx : 서버 쪽 오류
					-500 : Internal server Error
					-502,503
					
		바디(body)
			예)HTML 문자열(text/html이 반드시 있어야 인식이 가능하다.)


요청 방식

GET - 조회
주소창에 입력함으로써 조회

https://search.naver.com/search.naver
?
where=nexearch
&
sm=top_hty
&
fbm=1
&
ie=utf8
&
query=블로그
-바디에 데이터는 없다, 헤더 정보만 전달

질의(query) - 쿼리스트링(querystring)


POST - 작성하다
	-헤더 content-type -> 작성된 body 데이터의 종류(O ->서버가 데이터의 종류를 알 수 있어야 데이터를 가공...)

	-데이터가 body에 작성 됨
	
	content-type : application/json //json 사용시에는 content-type를 바꿔주어야 한다.
	{"키" : "값", "키" : "값"}


GET	-조회
	DELETE - 삭제 (삭제를 하기위해 조회가 필요하다.)

POST	- 작성
	PUT - 데이터의 전체 변경
	PATCH - 부분 변경


OPTIONS





