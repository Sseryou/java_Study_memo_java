상속과 다형성
1. 상속이란?

2. 클래스의 상속

3.클래스 상속 문법
class 하위클래스 extends 상위클래스 {

}

A<--B<--C

컴파일러가 모든 생성자 메서드의 첫번째 라인에 자동생성(숨겨짐)
super(); //상위클래스 기본 생성자

4. super
	지역변수 : 상위 클래스 생성될 객체의 주소를 가지고 있는 참조 변수

	메서드 : 상위 클래스의 생성자 메서드

C() -> super() : B() -> super() : A()

스택에서 C를 호출하면 B가 호출되고 A도 B에 의해 호출된다.
그 상태에서 실행이 되면, 결과로 A인스턴스(객체)가 반환되고, B인스턴스(객체)가 반환되고,
최종적으로 C인스턴스(객체)가 반환된다.

C인스턴스 안에서 B인스턴스와 A인스턴스가 포함된 구조가 된다.


5. 상속에서 클래스 생성과 형 변환
- 묵시적 형변환(다형성)
-> 하위 클래스가 상위 클래스의 자료형으로 형변환

 //출처가 있기 때문에 하위클래스의 자료형이 
 //상위클래스의 자료형으로 바뀔 수 있다.
 //상위클래스를 빼도 상관없다. 내용이 바뀌지 않기 때문


- 명시적 형변환
-> 상위클래스 -> 하위클래스로 형변환 자동 X
-> 상위클래스 객체의 출처가 하위클래스가 아닐수도 있기때문


6. 다운 캐스팅과 instanceof
참조변수 instanceOf 클래스
-> 참조변수가 참조하는 객체가 클래스로부터 유래된 객체인지

상위클래스 인스턴스 < 하위클래스 인스턴스

일반적인 개념          <----  구체적인 개념


사람
호랑이
새

향상된 for문

자료형 변수명 : 배열명

 for(Animal animal : animals){
            animal.move();
        }



7. 메서드 오버라이딩 (재정의)
하위 클래스가 상위클래스의 메서드와 동일한 명칭으로 정의
-> 하위 클래스의 메서드가 우선적으로 실행

애노테이션 -> 설명, 주석
-> 프로그램 내에서 참고하는 설명
@Override



8. 가상 메서드의 원리

가상 메서드 테이블 - 인스턴스에서 메서드 호출시 참고하는 주소 테이블
데이터 영역에 만들어진 메서드의 주소값을 불러와 참고한다
하위클래스에 동일한 값이 있으면 하위 클래스 것부터 참고한다.


메서드는 상수 영역에 존재한다.(함수의 구현부분은 변화가 없기 때문)
변할수 있는 값인 변수는 힙에 저장된다. 



애노테이션(Annotation)
@....

-설명, 주석





추상 클래스
추상적(정해지지 않은) <---> 구체적(정해진)

클래스
	변수
	메서드


1. 추상 클래스란?
구현체가 없는 메서드를 포함하는 클래스

설계할때 쓰임

설계 - 규칙 - 정의해주어야 함.

공통부분 정의할때 쓰임

추상클래스로 정의해놓은 클래스는 상속받는 모든 클래스에서 명확하게 정의해주어야 실행된다.
만약 하지 않게 된다면 오류가 발생한다


2. 추상 클래스 문법

메서드의 abstract
클래스 앞에 abstract

InputStream
	-abstrect int read()

3.추상클래스와 다형성














